{"version":3,"sources":["components/Navigation.jsx","components/Field.jsx","components/Button.jsx","components/ManipulationPanel.jsx","utils/index.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","length","difficulty","onChangeDifficulty","upVisibility","downVisibility","className","onClick","Field","fields","map","row","column","Button","status","onStop","onStart","onRestart","ManipulationPanel","onChange","getFoodPosition","fieldSize","excludes","x","Math","floor","random","y","some","item","initFields","snake","i","cols","Array","fill","push","food","initialPosition","initialValues","Difficulty","GameStatus","Object","freeze","init","playing","suspended","gameover","Direction","up","right","left","down","DirectionKeyCodeMap","37","38","39","40","OppositeDirection","Delta","timer","undefined","unsubscribe","clearInterval","App","useState","setFields","body","setBody","setStatus","direction","setDirection","setDifficulty","tick","setTick","useEffect","setInterval","handleMoving","onChangeDirection","useCallback","newDirection","handleKeyDown","e","keyCode","document","addEventListener","removeEventListener","position","delta","newPosition","isEatingMyself","newBody","removingTrack","pop","unshift","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.50ada60b.chunk.js","sourcesContent":["import React from 'react';\n\nconst Navigation = ({ length, difficulty = 3, onChangeDifficulty }) => {\n  const upVisibility = difficulty < 5 ? '' : 'is-hidden'\n  const downVisibility = difficulty > 1 ? '' : 'is-hidden'\n  const onUpDifficulty = () => onChangeDifficulty(difficulty + 1)\n  const onDownDifficulty = () => onChangeDifficulty(difficulty - 1)\n  return (\n    <div className=\"navigation\">\n      <div className=\"navigation-item\">\n        <span className=\"navigation-label\">Length: </span>\n        <div className=\"navigation-item-number-container\">\n          <div className=\"num-board\">{length}</div>\n        </div>\n      </div>\n\n      <div className=\"navigation-item\">\n        <span className=\"navigation-label\">Difficulty: </span>\n        <div className=\"navigation-item-number-container\">\n          <span className=\"num-board\">{difficulty}</span>\n          <div className=\"difficulty-button-container\">\n            <div\n              className={`difficulty-button difficulty-up ${upVisibility}`}\n              onClick={onUpDifficulty}\n            ></div>\n            <div\n              className={`difficulty-button difficulty-down ${downVisibility}`}\n              onClick={onDownDifficulty}\n            ></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n};\n\nexport default Navigation;","import React from 'react';\n\nconst Field = ({ fields }) => {\n  return (\n    <div className=\"field\">\n      {\n        fields.map((row) => {\n          return row.map((column) => {\n            return <div className={`dots ${column}`}></div>\n          })\n        })\n      }\n    </div>\n  );\n}\n\nexport default Field;","import React from 'react';\n\nconst Button = ({ status, onStop, onStart, onRestart }) => {\n  return (\n    <div className=\"button\">\n      { status === \"gameover\" && <button className=\"btn btn-gameover\" onClick={onRestart}>gameover</button> }\n      { status === \"init\" && <button className=\"btn btn-init\" onClick={onStart}>start</button> }\n      { status === \"suspended\" && <button className=\"btn btn-suspended\" onClick={onStart}>start</button> }\n      { status === \"playing\" && <button className=\"btn btn-playing\" onClick={onStop}>stop</button>}\n    </div>\n  );\n};\n\nexport default Button;","import React from 'react';\n\nconst ManipulationPanel = ({ onChange }) => {\n  const onUp = () => onChange('up')\n  const onRight = () => onChange('right')\n  const onLeft = () => onChange('left')\n  const onDown = () => onChange('down')\n\n  return (\n    <div className=\"manipulation-panel\">\n      <button className=\"manipulation-btn btn btn-left\" onClick={onLeft}>←</button>\n      <div>\n        <button className=\"manipulation-btn btn btn-up\" onClick={onUp}>↑</button>\n        <button className=\"manipulation-btn btn btn-down\" onClick={onDown}>↓</button>\n      </div>  \n      <button className=\"manipulation-btn btn btn-right\" onClick={onRight}>→</button>\n    </div>\n  );\n};\n\nexport default ManipulationPanel;","export const getFoodPosition = (fieldSize, excludes) => {\n  while (true) {  \n    const x = Math.floor(Math.random() * (fieldSize - 1 - 1)) + 1;\n    const y = Math.floor(Math.random() * (fieldSize - 1 - 1)) + 1;\n    const conflict = excludes.some((item) => item.x === x && item.y === y);\n\n    if (!conflict) {   \n      return { x, y };\n    }\n  }\n}\n\nexport const initFields = (fieldSize, snake) => {\n  const fields = []\n  for (let i = 0; i < fieldSize; i++) {\n    const cols = new Array(fieldSize).fill('')\n    fields.push(cols)\n  }\n\n  fields[snake.x][snake.y] = 'snake'\n\n  const food = getFoodPosition(fieldSize, [snake])\n  fields[food.y][food.x] = 'food'\n\n  return fields;\n};\n\n","import React, { useCallback, useEffect, useState } from 'react';\nimport Navigation from './components/Navigation';\nimport Field from './components/Field';\nimport Button from './components/Button';\nimport ManipulationPanel from './components/ManipulationPanel';\nimport { initFields, getFoodPosition } from './utils/index';\n\nconst initialPosition = { x: 17, y: 17 }\nconst initialValues = initFields(35, initialPosition)\nconst defaultInterval = 100\nconst defaultDifficulty = 3\n\nconst Difficulty = [1000, 500, 100, 50, 10]\n\nconst GameStatus = Object.freeze({\n  init: 'init',\n  playing: 'playing',\n  suspended: 'suspended',\n  gameover: 'gameover',\n})\n\nconst Direction = Object.freeze({\n  up: 'up',\n  right: 'right',\n  left: 'left',\n  down: 'down',\n})\n\nconst DirectionKeyCodeMap = Object.freeze({\n  37: Direction.left,\n  38: Direction.up,\n  39: Direction.right,\n  40: Direction.down,\n})\n\nconst OppositeDirection = Object.freeze({\n  up: 'down',\n  right: 'left',\n  left: 'right',\n  down: 'up',\n})\n\nconst Delta = Object.freeze({\n  up: { x: 0, y: -1 },\n  right: { x: 1, y: 0 },\n  left: { x: -1, y: 0 },\n  down: { x: 0, y: 1 },\n})\n\nlet timer = undefined\n\nconst unsubscribe = () => {\n  if (!timer) {\n    return\n  }\n  clearInterval(timer)\n}\n\nconst isCollision = (fieldSize, position) => {\n  if (position.y < 0 || position.x < 0) {\n    return true;\n  }\n  if (position.y > fieldSize - 1 || position.x > fieldSize - 1) {\n    return true;\n  }\n  return false;\n}\n\nconst isEatingMyself = (fields, position) => {\n  return fields[position.y][position.x] === 'snake'\n}\n\nfunction App() {\n  const [fields, setFields] = useState(initialValues)\n  const [body, setBody] = useState([])\n  const [status, setStatus] = useState(GameStatus.init)\n  const [direction, setDirection] = useState(Direction.up)\n  const [difficulty, setDifficulty] = useState(defaultDifficulty)\n  const [tick, setTick] = useState(0)\n\n  useEffect(() => {\n    setBody([initialPosition])\n    // ゲームの中の時間を管理\n    const interval = Difficulty[difficulty - 1]\n    timer = setInterval(() => {\n      setTick(tick => tick + 1)\n    }, interval);\n    return unsubscribe; // コンポーネントが削除されるタイミングで実行される\n  }, [difficulty])\n\n  useEffect(() => {\n    if (body.length === 0 || status !== GameStatus.playing) {\n      return\n    }\n    const canContinue = handleMoving() // handleMovingを実行、boolean値が返る\n    if (!canContinue) { // handleMovingがfalseならゲームを終了させる\n      unsubscribe()\n      setStatus(GameStatus.gameover)\n    }\n  }, [tick]) //tickに変更があるたびに実行\n\n  const onStart = () => setStatus(GameStatus.playing)\n  \n  const onStop = () => setStatus(GameStatus.suspended)\n\n  const onRestart = () => {\n    timer = setInterval(() => {\n      setTick(tick => tick + 1)\n    }, defaultInterval)\n    setStatus(GameStatus.init)\n    setBody([initialPosition])\n    setDirection(Direction.up)\n    setFields(initFields(35, initialPosition))\n  }\n\n  const onChangeDirection = useCallback(　// レンダリングのたびに関数を再生成する無駄を省く\n    (newDirection) => {\n      if (status !== GameStatus.playing) {\n        return direction\n      }\n      if (OppositeDirection[direction] === newDirection) {\n        return\n      }\n      setDirection(newDirection);\n    }, [direction, status]\n  )\n       const onChangeDifficulty = useCallback((difficulty) => {\n     if (status !== GameStatus.init) {\n       return\n     }\n     if (difficulty < 1 || difficulty > Difficulty.length) {\n       return\n     }\n     setDifficulty(difficulty)\n   }, [status, difficulty])\n  \n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      const newDirection = DirectionKeyCodeMap[e.keyCode];\n      if (!newDirection) {\n        return;\n      }\n      onChangeDirection(newDirection);\n    };\n    document.addEventListener('keydown', handleKeyDown);\n    return () => document.removeEventListener('keydown', handleKeyDown) // 無駄になるのでイベントリスナーを削除\n  }, [onChangeDirection])\n  \n  const handleMoving = () => { //動きを返す\n    const { x, y } = body[0]\n    const delta = Delta[direction]\n    const newPosition = {\n      x: x + delta.x,\n      y: y + delta.y,\n    }\n    if (isCollision(fields.length, newPosition) || isEatingMyself(fields, newPosition)) { //次のポジションがフィールド外でないかisCollisionで判定\n      return false\n    }\n    const newBody = [...body]\n    if (fields[newPosition.y][newPosition.x] !== 'food') {\n      const removingTrack = newBody.pop()\n      fields[removingTrack.y][removingTrack.x] = ''\n    } else {\n      const food = getFoodPosition(fields.length, [...newBody, newPosition])\n      fields[food.y][food.x] = 'food'\n    }\n    fields[newPosition.y][newPosition.x] = 'snake'\n    newBody.unshift(newPosition)\n\n    setBody(newBody)\n    setFields(fields)\n    return true\n  }\n\n  return (\n    <div className=\"App\">\n\n      <header className=\"header\">\n        <div className=\"title-container\">\n          <h1 className=\"title\">Snake Game</h1>\n        </div>\n        <Navigation\n          length={body.length}\n          difficulty={difficulty}\n          onChangeDifficulty={onChangeDifficulty}\n        />\n      </header>\n\n      <main className=\"main\">\n        <Field fields={fields} />\n      </main>\n\n      <footer className=\"footer\">\n        <Button\n          status={status}\n          onStop={onStop}\n          onStart={onStart}\n          onRestart={onRestart}\n        />\n        <ManipulationPanel onChange={onChangeDirection} />\n      </footer>\n      \n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}